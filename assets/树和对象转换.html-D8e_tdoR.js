import{_ as n,c as s,o as a,a as t}from"./app-Ba5SHWBn.js";const p="/web-page/images/20210526-1.png",e="/web-page/images/20210526-3.jpeg",c={},o=t(`<h1 id="树和对象转换" tabindex="-1"><a class="header-anchor" href="#树和对象转换"><span>树和对象转换</span></a></h1><p>给定一棵树</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>const tree <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title: <span class="token string">&#39;1&#39;</span>,
    id: <span class="token string">&#39;1&#39;</span>,
    children: <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        title: <span class="token string">&#39;2-1&#39;</span>,
        id: <span class="token string">&#39;2-1&#39;</span>,
        children: <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            title: <span class="token string">&#39;2-1-1&#39;</span>,
            id: <span class="token string">&#39;2-1-1&#39;</span>,
          <span class="token punctuation">}</span>,
        <span class="token punctuation">]</span>,
      <span class="token punctuation">}</span>,
      <span class="token punctuation">{</span>
        title: <span class="token string">&#39;2-2&#39;</span>,
        id: <span class="token string">&#39;2-2&#39;</span>,
      <span class="token punctuation">}</span>,
    <span class="token punctuation">]</span>,
  <span class="token punctuation">}</span>,
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="树转一维数组" tabindex="-1"><a class="header-anchor" href="#树转一维数组"><span>树转一维数组</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">treeTransArray</span><span class="token punctuation">(</span><span class="token parameter">tree<span class="token punctuation">,</span> parentId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> tree<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> <span class="token punctuation">{</span> children <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">...</span>item <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
      arr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>
        <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token operator">...</span>item<span class="token punctuation">,</span> parentId <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token function">treeTransArray</span><span class="token punctuation">(</span>children<span class="token punctuation">,</span> item<span class="token punctuation">.</span>id<span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token function">treeTransArray</span><span class="token punctuation">(</span>tree<span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+p+`" alt="树转一维数组" title="树转一维数组"></p><h2 id="一维数组转树" tabindex="-1"><a class="header-anchor" href="#一维数组转树"><span>一维数组转树</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">arrayTransTree</span><span class="token punctuation">(</span><span class="token parameter">list<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> tree <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">parent</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> branchArr <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">child</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> parent<span class="token punctuation">.</span>id <span class="token operator">===</span> child<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    parent<span class="token punctuation">.</span>children <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>branchArr<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      parent<span class="token punctuation">.</span>children <span class="token operator">=</span> branchArr
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> flag <span class="token operator">=</span> parent<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;0&#39;</span>
    <span class="token keyword">return</span> flag
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> tree
<span class="token punctuation">}</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token function">treeTransArray</span><span class="token punctuation">(</span>tree<span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">arrayTransTree</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token string">&#39;parentId&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="树转对象" tabindex="-1"><a class="header-anchor" href="#树转对象"><span>树转对象</span></a></h2><p>查找父类包括自己所在的对象</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">makeRevMap</span><span class="token punctuation">(</span><span class="token parameter">list<span class="token punctuation">,</span> parents</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    result<span class="token punctuation">[</span>item<span class="token punctuation">.</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> parents<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>
      item<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span>
      Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
      item<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>result<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token function">makeRevMap</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>children<span class="token punctuation">,</span> result<span class="token punctuation">[</span>item<span class="token punctuation">.</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">makeRevMap</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+e+`" alt="树转对象" title="树转对象"></p><h2 id="树平铺" tabindex="-1"><a class="header-anchor" href="#树平铺"><span>树平铺</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">treeToList</span><span class="token punctuation">(</span><span class="token parameter">treeRoot</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

    <span class="token keyword">function</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token parameter">tree<span class="token punctuation">,</span> tmpArr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      tree<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">element</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> childArr <span class="token operator">=</span> tmpArr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> element<span class="token punctuation">.</span>title <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">loop</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span>children<span class="token punctuation">,</span> childArr<span class="token punctuation">,</span> arr<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>childArr<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">loop</span><span class="token punctuation">(</span>treeRoot<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> arr
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">treeToList</span><span class="token punctuation">(</span>tree<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),i=[o];function l(u,r){return a(),s("div",null,i)}const d=n(c,[["render",l],["__file","树和对象转换.html.vue"]]),v=JSON.parse('{"path":"/algorithm/%E6%A0%91%E5%92%8C%E5%AF%B9%E8%B1%A1%E8%BD%AC%E6%8D%A2.html","title":"树和对象转换","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"树转一维数组","slug":"树转一维数组","link":"#树转一维数组","children":[]},{"level":2,"title":"一维数组转树","slug":"一维数组转树","link":"#一维数组转树","children":[]},{"level":2,"title":"树转对象","slug":"树转对象","link":"#树转对象","children":[]},{"level":2,"title":"树平铺","slug":"树平铺","link":"#树平铺","children":[]}],"git":{"updatedTime":1716273961000,"contributors":[{"name":"wu.hui","email":"wu.hui@qkupower.com","commits":1}]},"filePathRelative":"algorithm/树和对象转换.md"}');export{d as comp,v as data};
