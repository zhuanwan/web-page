import{_ as n,c as s,o as a,a as t}from"./app-Ba5SHWBn.js";const p={},e=t(`<h1 id="输出png" tabindex="-1"><a class="header-anchor" href="#输出png"><span>输出png</span></a></h1><p><code>canvas.toDataURL(&#39;png&#39;)</code> 输出png（base64）</p><p>使用 <code>canvas.toDataURL(&#39;png&#39;)</code> 可以输出 <code>png</code> 图片。但这个操作可能会打断 <code>canvas</code> 的渲染，所以之后要再执行以下 <code>canvas.requestRenderAll()</code> 。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">draw</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">canvas</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">fabric<span class="token punctuation">.</span>Rect</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
    <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span>
    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;transparent&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">stroke</span><span class="token operator">:</span> <span class="token string">&#39;blue&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  canvas<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;toPng&#39;</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">&#39;png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 在控制台输出 png（base64）</span>
  canvas<span class="token punctuation">.</span><span class="token function">requestRenderAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),o=[e];function c(l,i){return a(),s("div",null,o)}const u=n(p,[["render",c],["__file","输出png.html.vue"]]),d=JSON.parse('{"path":"/fabric/%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E8%BE%93%E5%87%BApng.html","title":"输出png","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1716273961000,"contributors":[{"name":"wu.hui","email":"wu.hui@qkupower.com","commits":1}]},"filePathRelative":"fabric/序列化和反序列化/输出png.md"}');export{u as comp,d as data};
